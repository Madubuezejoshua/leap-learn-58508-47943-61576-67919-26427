rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }
    
    function isAdmin() {
      return isAuthenticated() && getUserRole() == 'admin';
    }
    
    function isCoordinator() {
      return isAuthenticated() && (getUserRole() == 'coordinator' || getUserRole() == 'admin');
    }
    
    function isTeacher() {
      return isAuthenticated() && getUserRole() == 'teacher';
    }
    
    function isStudent() {
      return isAuthenticated() && getUserRole() == 'student';
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && (isOwner(userId) || isCoordinator());
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Courses collection
    match /courses/{courseId} {
      allow read: if isAuthenticated();
      allow create, update: if isCoordinator();
      allow delete: if isAdmin();
    }
    
    // Enrollments collection
    match /enrollments/{enrollmentId} {
      allow read: if isAuthenticated() && (
        resource.data.studentId == request.auth.uid || 
        isCoordinator() ||
        isTeacher()
      );
      allow create: if isAuthenticated();
      allow update: if isCoordinator();
      allow delete: if isAdmin();
    }
    
    // Scheduled Classes collection
    match /scheduled_classes/{classId} {
      allow read: if isAuthenticated();
      allow create, update: if isTeacher() || isCoordinator();
      allow delete: if isCoordinator();
    }
    
    // Class Attendance collection
    match /class_attendance/{attendanceId} {
      allow read: if isAuthenticated() && (
        resource.data.studentId == request.auth.uid ||
        isTeacher() ||
        isCoordinator()
      );
      allow create, update: if isTeacher() || isCoordinator();
      allow delete: if isAdmin();
    }
    
    // Grades collection
    match /grades/{gradeId} {
      allow read: if isAuthenticated() && (
        resource.data.studentId == request.auth.uid || 
        isCoordinator() ||
        isTeacher()
      );
      allow create, update: if isTeacher() || isCoordinator();
      allow delete: if isAdmin();
    }
    
    // Assignments collection
    match /assignments/{assignmentId} {
      allow read: if isAuthenticated();
      allow create, update: if isTeacher() || isCoordinator();
      allow delete: if isAdmin();
    }
    
    // Submissions collection
    match /submissions/{submissionId} {
      allow read: if isAuthenticated() && (
        resource.data.studentId == request.auth.uid || 
        isTeacher() ||
        isCoordinator()
      );
      allow create: if isAuthenticated() && request.resource.data.studentId == request.auth.uid;
      allow update: if isOwner(resource.data.studentId) || isTeacher() || isCoordinator();
      allow delete: if isAdmin();
    }
    
    // Default deny all other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
